{% set output = {} %}
{% set errors = {} %}
{% if clusterdef is defined %}
{%   set _ = clusterdef.update({'dynamic': {}}) %}
{% else %}
{%   set clusterdef = {'dynamic': {}} %}
{% endif %}
{% set _ = clusterdef.dynamic.update({'hdfs': {}}) %}
{% for host in groups['cdh_servers'] %}
{%   if 'host_template' in hostvars[host] %}
{%     if hostvars[host]['host_template'] == 'HostTemplate-Single-Master' %}
{%       if clusterdef.dynamic.hdfs['autofailover_enabled'] is defined and clusterdef.dynamic.hdfs['autofailover_enabled'] %}
{%         set _ = errors.update({'hdfs_autofailover_enabled': 'Illegal state: Both HostTemplate-Single-Master and HostTemplate-Master[1-3] templates are defined in inventory'}) %}
{%       endif %}
{%       set _ = clusterdef.dynamic.hdfs.update({'autofailover_enabled': false}) %}
{%     elif hostvars[host]['host_template'] | regex_search('HostTemplate-Master[1-3]') %}
{%       if clusterdef.dynamic.hdfs['autofailover_enabled'] is defined and not clusterdef.dynamic.hdfs['autofailover_enabled'] %}
{%         set _ = errors.update({'hdfs_autofailover_enabled': 'Illegal state: Both HostTemplate-Single-Master and HostTemplate-Master[1-3] templates are defined in inventory'}) %}
{%       endif %}
{%       set _ = clusterdef.dynamic.hdfs.update({'autofailover_enabled': true}) %}
{%     endif %}
{%   endif %}
{% endfor %}
{% set _ = output.update({'clusterdef': clusterdef})%}
{% set _ = output.update({'errors': errors})%}
{{ output | to_json }}