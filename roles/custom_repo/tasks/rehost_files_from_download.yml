# Copyright 2021 Cloudera, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
# Populate custom_repo
- name: Ensure repo directories exist for file downloads to match required object structure
  loop: "{{ custom_repo_rehost_files }}"
  loop_control:
    loop_var: __tmp_parcel_dir_item
  ansible.builtin.file:
    path: "/var/www/html{{ __tmp_parcel_dir_item | urlsplit('path') | dirname }}"
    state: directory

- name: Copy tarball to correct location
  copy:
    src: "{{ local_temp_dir }}{{ __tarball_download_item | urlsplit('path') }}"
    dest: "/var/www/html{{ __tarball_download_item | urlsplit('path') }}"
  loop: "{{ custom_repo_rehost_files }}"
  loop_control:
    loop_var: __tarball_download_item

- name: Ensure paths for unpacked repo-as-tars
  loop: "{{ custom_repo_rehost_files | select('search', 'tar.gz') | select('search', 'repo-as-tarball') | list }}"
  loop_control:
    loop_var: __tmp_tar_dir_item
  ansible.builtin.file:
    path: "/var/www/html{{ __tmp_tar_dir_item | urlsplit('path') | regex_replace('^(.+)repo.+-(.+)\\.tar\\.gz$', '\\1\\2' + '/yum/') }}"
    state: directory

- name: Unpack repo-as-tar archives
  loop: "{{ custom_repo_rehost_files | select('search', 'tar.gz') | select('search', 'repo-as-tarball') | list }}"
  loop_control:
    loop_var: __tmp_unpack_item
  ansible.builtin.unarchive:
    extra_opts: [--strip-components=1]
    remote_src: yes
    src: "/var/www/html{{ __tmp_unpack_item | urlsplit('path') }}"
    dest: "/var/www/html{{ __tmp_unpack_item | urlsplit('path') | regex_replace('^(.+)repo.+-(.+)\\.tar\\.gz$', '\\1\\2' + '/yum/') }}"
    keep_newer: "{{ keep_newer }}"

# scm_parcel_repositories is overriden with the following logic:
# - filter_url_path_p_prefix: map('regex_replace', '^/p(.*)$', '\\1'))
#   Which removes root path dir '/p'
# - filter_url_path_version_patch: map('regex_replace', '^(.*)([0-9\\.]+)-.*?(/.*)$', '\\1\\2\\3'))
#   Which modifies full version path dir to base one with no patch version suffix in it.
#   For example '/6.3.2-patch4072/' -> '/6.3.2/'
- name: Set Cloudera Manager Base Repo if included in rehosting list
  when: custom_repo_rehost_files | select('search', 'tar.gz') | list | select('search', '/cm') | list | length > 0
  vars:
    cloudera_archive_base_url:          "http://{{ groups['custom_repo'] | first }}"
  ansible.builtin.set_fact:
    scm_parcel_repositories: >-
                                        {{ [cloudera_archive_base_url] | product(scm_parcel_repositories | map('urlsplit', 'path')
                                          | map('regex_replace', "^/p(.*)$", "\1")
                                          | map('regex_replace', "^(.*)([0-9\.]+)-[^/]*(/.*)$", "\1\2\3"))
                                          | map('join') | list }}
    scm_repo_url:                       "{{ cloudera_archive_base_url }}{{ scm_repo_url | urlsplit('path') }}"
    scm_repo_gpgkey:                    "{{ cloudera_archive_base_url }}{{ scm_repo_gpgkey | urlsplit('path') }}"
  delegate_to: "{{ __play_host }}"
  delegate_facts: true
  loop: "{{ groups.scm_server + groups.cdh_servers }}"
  loop_control:
    loop_var: __play_host
    label: __play_host
